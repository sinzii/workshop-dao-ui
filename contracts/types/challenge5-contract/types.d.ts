// Generated by dedot cli

import type { AccountId32, Bytes, BytesLike, FixedBytes, AccountId32Like } from 'dedot/codecs';

export type InkStorageLazyVecStorageVec = { len: InkStorageLazy; elements: InkStorageLazyMapping };

export type InkStorageTraitsImplsResolverKey = {};

export type InkStorageTraitsImplsAutoKey = {};

export type InkStorageTraitsImplsManualKey = {};

export type InkStorageLazy = {};

export type InkStorageLazyMapping = {};

export type Challenge5ContractDao = { superdao: AccountId32; name: string; voters: InkStorageLazyVecStorageVec };

export type InkPrimitivesLangError = 'CouldNotReadInput';

export type MinidaoCommonDaoError =
  | { type: 'VoterAlreadyRegistered' }
  | { type: 'VoterNotRegistered' }
  | { type: 'VoterAlreadyVoted' }
  | { type: 'ProposalDoesNotExist' }
  | { type: 'PrevotePeriodIsNotEnded' }
  | { type: 'NoContractAddress' }
  | { type: 'SuperdaoError'; value: SuperdaoTraitsError };

export type SuperdaoTraitsError = 'DispatchFailed' | 'AlreadyMember' | 'NotMember' | 'ProposalNotFound';

export type SuperdaoTraitsChainCall = { dest: Bytes; msg: Bytes };

export type SuperdaoTraitsChainCallLike = { dest: BytesLike; msg: BytesLike };

export type SuperdaoTraitsContractCall = {
  callee: AccountId32;
  selector: FixedBytes<4>;
  input: Bytes;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type SuperdaoTraitsContractCallLike = {
  callee: AccountId32Like;
  selector: FixedBytes<4>;
  input: BytesLike;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type InkEnvNoChainExtension = null;
