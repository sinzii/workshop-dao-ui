// Generated by dedot cli

import type { AccountId32, FixedBytes, Bytes, AccountId32Like, BytesLike } from 'dedot/codecs';

export type InkStorageLazyMapping = {};

export type SuperdaoTraitsProposal = { call: SuperdaoTraitsCall; votingPeriodEnd: number };

export type SuperdaoTraitsCall =
  | { type: 'Contract'; value: SuperdaoTraitsContractCall }
  | { type: 'Chain'; value: SuperdaoTraitsChainCall };

export type SuperdaoTraitsCallLike =
  | { type: 'Contract'; value: SuperdaoTraitsContractCallLike }
  | { type: 'Chain'; value: SuperdaoTraitsChainCallLike };

export type SuperdaoTraitsContractCall = {
  callee: AccountId32;
  selector: FixedBytes<4>;
  input: Bytes;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type SuperdaoTraitsContractCallLike = {
  callee: AccountId32Like;
  selector: FixedBytes<4>;
  input: BytesLike;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type SuperdaoTraitsChainCall = { dest: Bytes; msg: Bytes };

export type SuperdaoTraitsChainCallLike = { dest: BytesLike; msg: BytesLike };

export type InkStorageTraitsImplsResolverKey = {};

export type InkStorageTraitsImplsAutoKey = {};

export type InkStorageTraitsImplsManualKey = {};

export type SuperdaoTraitsVote = 'Aye' | 'Nay';

export type Superdao = {
  members: Array<AccountId32>;
  proposals: InkStorageLazyMapping;
  activeProposals: Array<number>;
  votes: InkStorageLazyMapping;
  nextId: number;
  voteThreshold: number;
  votingPeriod: number;
};

export type InkPrimitivesLangError = 'CouldNotReadInput';

export type SuperdaoTraitsError =
  | 'DispatchFailed'
  | 'AlreadyMember'
  | 'NotMember'
  | 'ProposalNotFound'
  | 'ProposalIsNotApproved';

export type InkEnvNoChainExtension = null;
